Not sure how to get an OAuth access token?

It's really easy with the Facebook Graph API. Sign in to Facebook and navigate to the Graph API Explorer app. Click the "Get Access Token" button. That's it!
Keep in mind that this is only useful for quick testing. For production use, you'll need to create a Facebook Application and use it to obtain OAuth tokens for your users. Take a look at the FB Authentication documentation for more details.


Article No. 58 View the One Comment
Category:  September 6, 2013 This article is part of a series:  Access Token, Facebook, Page Access Token, Token Obtaining Facebook page access tokens: The 4 step program
More and more businesses are creating Facebook pages to promote their products and services. To keep content fresh, many websites and applications are automatically posting content to their pages.  Anyone who’s played a Facebook game or even used the Facebook app knows of user-access tokens.  They allow an application to post content on behalf of the user. But how do these applications post content on a page, as the page?  That’s where page access tokens come into play.

What are page access tokens?

Page access tokens allow your application to carry out actions on a page as the page itself; not as a regular Facebook user.  If you are a page administrator, you are probably well aware of the feature to change your account context as a page so when you publish posts, create notes, or comment; they appear as if created by the page – not by you.  Page access tokens allow any application to post content as the page.



These tokens allow applications to publish content to a Facebook page automatically, that is, without the intervention of a user by using the Facebook Graph Page API(along with the token). Using a user access token will post content as the Facebook user (not the page) and will also allow anyone with database access to potentially compromise that user’s personal account.  Storing page access tokens mitigates this risk because those tokens can only be used to issue requests on a particular page and not the user’s own personal account.

User access tokens, even long lived ones, expire after some time.  “Long lived” page access tokens do not expire and thus are especially suited for application use.

How to obtain page access tokens?

Obtaining a Facebook access token requires 4 steps that must be followed in order.

Register a Facebook application.Retrieve a user access token for a Facebook account that has appropriate content editing permissions for your page.Exchange that short lived token with a long lived token.Use the long lived token to obtain the page access token.
Integrating into your application?

There are several ways of implementing the 4 steps above.  If your application is a website, you will want a way for administrators (who also access to Facebook accounts that can manage your page) to dynamically generate page access tokens if the existing token were to become invalid.  To start, your application must have access to a Facebook application ID, application secret, and the ID of the page you wish to receive a token for.

1 The OAuth Dialog

First, register a Facebook application and obtain an application Id and secret. Now, within your website, create with a page that can only be accessed by your site’s admins. This page will provide a button to invoke the OAuth Dialog popup which will allow your admins to log into Facebook using your FB app.

	
The URL for the button should be of the following:

1
https://www.facebook.com/dialog/oauth?client_id=<APP_ID >&redirect_uri=<REDIRECT_URL >&scope=manage_pages%2Cpublish_stream&state=<STATE>
Where:

APP_ID is your application id.
REDIRECT_URL is a callback URL that Facebook will issue when authorization is successful
STATE is a unique code (generated by you) which Facebook send back to you as a request parameter on the REDIRECT_URL request
What Comes back:

CODE is a code generated by Facebook to validate a particular successful OAuth login with a subsequent request for a access token.
2 Obtain User Access Token(Short Lived)

Next is to obtain the short lived user access token using the “code” which was passed to your site as a request parameter on the callback. To do this, invoke a GET request to the following URL:

1
https://graph.facebook.com/oauth/access_token?client_id=<APP_ID>&client_secret=<APP_SECRET>&code=<CODE>

Where:

APP_ID is your application id.
APP_SECRET is your application secret
The CODE is the value of the code request param on the callback URL in step 1.
What comes back:

The JSON response will contain the short lived access token.
3 Obtain User Access Token(Long Lived)

You must exchange this short lived token with a long lived token by invoking a GET request to the following URL:

1
https://graph.facebook.com/oauth/access_token?grant_type=fb_exchange_token&client_id=<APP_ID>&client_secret=<APP_SECRET>&fb_exchange_token=<SHORT_LIVED_TOKEN>
Where:

APP_ID is your application id.
APP_SECRET is your application secret.
SHORT_LIVED_TOKEN is the short lived user access token received in the previous step.
What comes back:

The JSON response will contain the long lived access token.
4 OBTAIN PAGE ACCESS TOKEN

Use the long lived token to retrieve a page access token by issuing a final GET request to:

1
https://graph.facebook.com/me/accounts?access_token=<LONG_LIVED_TOKEN>
Where:

  LONG_LIVED_TOKEN is the access token received in step 3.
What comes back:
The JSON response will contain a array of all pages this particular user has permission to manage. Iterate though this list to find the page of interest. The access_token is long lived and thus will not expire and can be stored in your database.  Below is an example response:

01
{
02
  "data": [
03
    {
04
      "category": "Website",
05
      "name": "My Test Page",
06
      "access_token": "CAAChdS...",
07
      "perms": [
08
        "ADMINISTER",
09
        "EDIT_PROFILE",
10
        "CREATE_CONTENT",
11
        "MODERATE_CONTENT",
12
        "CREATE_ADS",
13
        "BASIC_ADMIN"
14
      ],
15
      "id": "999999"
16
    },
17
    {...}
18
}
